
@using Era_sphere.Areas.AreaClientes.Models
@using Era_sphere.Generics;
@model IEnumerable<ClienteView>
@using Telerik.Web.Mvc.UI

@{
    ViewBag.Title = "IndexHotel";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var paises = (new EraSphereContext()).paises.ToList();
    var ciudades = (new EraSphereContext()).ciudades.ToList();
    var estados = (new EraSphereContext()).estados_cliente.ToList();
}


<div class="block big" style="position: relative">
    <!-- Block Begin -->
    <div class="titlebar">
        <h3>
            Mantenimiento de Clientes
        </h3>
    </div>
    <div class="titlebar">
        <h5>
            Clientes Naturales
        </h5>
    </div>
    <div class="block_cont">
        @(Html.Telerik().Grid(Model)
        .Name("ClienteNaturalGrid")
        .Localizable("es-ES")
        .Filterable()
        .ToolBar(commands => commands.Insert())
        .Editable(editing => editing
                            .Mode(GridEditMode.PopUp)
                            .TemplateName("ClienteNaturalViewTemplate"))

        .DataKeys(key => key.Add(c => c.ID))
        .Columns(columns =>
        {
            columns.Bound(p => p.ID);
            columns.Bound(p => p.nombre);
            columns.Bound(p => p.apellido_paterno);
            columns.Bound(p => p.apellido_materno);
            columns.Bound(p => p.id_estado);
            //columns.Bound(p => p.fecha_nacimiento).Format("{0:dd/MM/yyyy}");
            columns.Bound(p => p.tipoID);
            //  columns.Bound(p => p.pais_nombre);
            //  columns.Bound(p => p.ciudad_nombre);
            //  columns.Bound(p => p.provincia);
            //  columns.ForeignKey(p => p.paisID, paises, "ID", "nombre");
            columns.Command(commands =>
            {
                commands.Edit().ButtonType(GridButtonType.Image);
                commands.Delete().ButtonType(GridButtonType.Image);
                commands.Custom("mostrar").Text("Mostrar").
                    DataRouteValues(route => route.Add(o => o.ID).RouteKey("id")).Ajax(true).Action("Mostrar", "Cliente");
            }).Width(160);
        })

        .Pageable()
        .Sortable()

                .ClientEvents(events => events.OnComplete("onComplete"))
                .DataBinding(dataBinding => dataBinding
                    .Ajax().Select("_CustomCommand", "Cliente")
                    .Select("Select", "Cliente", new { tipoi = 1 })
                    .Insert("Insert", "Cliente", new { tipoi = 1 })
                    .Delete("Delete", "Cliente", new { tipoi = 1 })
                    .Update("Update", "Cliente", new { tipoi = 1 })
        )
           )

    </div>
    
    <div style="height:20px;"></div>

    <div class="titlebar">
        <h5>
            Clientes Jurídicos
        </h5>
    </div>
       <div class="block_cont">
        @(Html.Telerik().Grid(Model)
        .Name("ClienteJuridicoGrid")
        .Localizable("es-ES")
        .Filterable()
        .ToolBar(commands => commands.Insert())
        .Editable(editing => editing
                            .Mode(GridEditMode.PopUp)
                            .TemplateName("ClienteJuridicoViewTemplate"))

        .DataKeys(key => key.Add(c => c.ID))
        .Columns(columns =>
        {
            columns.Bound(p => p.ID);
            columns.Bound(p => p.razon_social);
            columns.Bound(p => p.ruc);
            columns.ForeignKey(p => p.id_estado, new SelectList(estados, "ID", "descripcion"));
            //  columns.Bound(p => p.pais_nombre);
            //  columns.Bound(p => p.ciudad_nombre);
            //  columns.Bound(p => p.provincia);
            //  columns.ForeignKey(p => p.paisID, paises, "ID", "nombre");
            columns.Command(commands =>
            {
                commands.Edit().ButtonType(GridButtonType.Image);
                commands.Delete().ButtonType(GridButtonType.Image);
                commands.Custom("mostrar").Text("Mostrar").
                    DataRouteValues(route => route.Add(o => o.ID).RouteKey("id")).Ajax(true).Action("Mostrar", "Cliente");

            }).Width(160);
        })

        .Pageable()
        .Sortable()

        .ClientEvents(events => events.OnComplete("onComplete"))
        .DataBinding(dataBinding => dataBinding
            .Ajax().Select("_CustomCommand", "Cliente")
            .Select("Select", "Cliente", new { tipoi = 2 })
            .Insert("Insert", "Cliente", new { tipoi = 2 })
            .Delete("Delete", "Cliente", new { tipoi = 2 })
            .Update("Update", "Cliente", new { tipoi = 2 })
        )
           )

    </div>
    <!-- Table Wrapper End -->
</div>

@(Html.Telerik().Window()
    .Name("Detalle").Visible(false).Title("Cliente").Modal(true).Width(500).Content(
    @<text>
        <div id="detalle-cliente">
            <d1>
            <dt>ID</dt><dd></dd>
            </d1>
        </div>
    </text>))

<script type="text/javascript">
    function onComplete(e) {
        if (e.name == "mostrar") {
            var detailModal = $("#Detalle").data("tWindow");
            var cliente = e.response.cliente;
            $("#detalle-cliente")
            .find("dd").text(cliente.ID).end();
            detailModal.center().open();
        }
    }
</script>