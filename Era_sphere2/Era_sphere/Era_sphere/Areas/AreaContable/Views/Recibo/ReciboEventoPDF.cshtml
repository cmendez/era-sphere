@using Era_sphere.Areas.AreaContable.Models.Recibo
@using Era_sphere.Areas.AreaClientes.Models
@using Era_sphere.Generics
@using Era_sphere.Areas.AreaConfiguracion.Models.Cadenas
@using Era_sphere.Areas.AreaHoteles.Models
@using Era_sphere.Areas.AreaEventos.Models.Evento
@using Era_sphere.Areas.AreaEventos.Models.EventoXAmbiente
@using Era_sphere.Areas.AreaConfiguracion.Models.Servicios
@model Recibo
@using Telerik.Web.Mvc.UI  
@{
    EraSphereContext context = new EraSphereContext();
    Cadena cad = context.cadenas.Find(1);
    Cliente cliente = context.clientes.Find(Model.clienteID);
    List<ReciboLinea> lineas = context.recibos_lineas.Where(x => x.reciboID == Model.ID).ToList();
    int hotelID = Model.auxID;
    Hotel h = context.hoteles.Find(hotelID);
    string id = "" + Model.ID;
    while (id.Length < 6) { id = "0" + id; }
}

<span style="font-weight:bold">
@if (Model.tipo == 0)
{   //boleta
    <label>Boleta: @id</label>
}
else
{
    <label>Factura: @id</label>
}

<br />
<label>@cad.nombreCadena</label>
<br />
<label>@h.razon_social</label>
<br />
<label>Ruc @h.nroreg_id</label>
<br />
</span>

<br />
<label style="font-weight:bold"> Detalle del cliente</label>
@if (Model.tipo == 0)
{
    //boleta
    <div class="editor-label"> @Html.LabelFor(model => cliente.nombre) </div>
    <div class="editor-label"> @Html.DisplayFor(model => cliente.nombre) </div>
    <br />
    <div class="editor-label"> @Html.LabelFor(model => cliente.apellido_materno) </div>
    <div class="editor-label"> @Html.DisplayFor(model => cliente.apellido_paterno) </div>
    <br />
    <div class="editor-label"> @Html.LabelFor(model => cliente.nombre) </div>
    <div class="editor-label"> @Html.DisplayFor(model => cliente.nombre) </div>
    <br />
    <div class="editor-label"> @Html.LabelFor(model => cliente.documento_identidad) : <label>@cliente.tipo_documento.descripcion</label></div>
    <div class="editor-label"> @Html.DisplayFor(model => cliente.documento_identidad) </div>
    <br />
    <div class="editor-label"> @Html.LabelFor(model => cliente.puntos_cliente) </div>
    <div class="editor-label"> @Html.DisplayFor(model => cliente.puntos_cliente) </div>
    <br />
}
else
{
     
        
    if (cliente.tipoID == 1)
    {
    <div class="editor-label"> @Html.LabelFor(model => cliente.nombre) </div>
        <div class="editor-label"> @Html.DisplayFor(model => cliente.nombre) </div>
        <br />
        <div class="editor-label"> @Html.LabelFor(model => cliente.apellido_paterno) </div>
        <div class="editor-label"> @Html.DisplayFor(model => cliente.apellido_paterno) </div>
        <br />
        <div class="editor-label"> @Html.LabelFor(model => cliente.apellido_materno) </div>
        <div class="editor-label"> @Html.DisplayFor(model => cliente.apellido_materno) </div>
    }
    else
    {
        <div class="editor-label"> @Html.LabelFor(model => cliente.razon_social) </div>
        <div class="editor-label"> @Html.DisplayFor(model => cliente.razon_social) </div>
    }
    
    
        <br />
        <div class="editor-label"> Ruc:</div>
        <div class="editor-label"> @Html.DisplayFor(model => cliente.ruc) </div>
        <br />
        <div class="editor-label"> @Html.LabelFor(model => cliente.puntos_cliente) </div>
        <div class="editor-label"> @Html.DisplayFor(model => cliente.puntos_cliente) </div>
        <br />
    
       
    //factura
   @* <div class="editor-label"> @Html.LabelFor(model => cliente.razon_social) </div>
    <div class="editor-label"> @Html.DisplayFor(model => cliente.razon_social) </div>
    <br />
    <div class="editor-label"> @Html.LabelFor(model => cliente.documento_identidad) : <label>@cliente.tipo_documento.descripcion</label></div>
    <div class="editor-label"> @Html.DisplayFor(model => cliente.ruc) </div>
    <br />
    <div class="editor-label"> @Html.LabelFor(model => cliente.puntos_cliente) </div>
    <div class="editor-label"> @Html.DisplayFor(model => cliente.puntos_cliente) </div>
    <br />*@
}

@{
    Evento evento = context.eventos.Find(Model.eventoID);
    List<EventoXAmbiente> lista = context.eventoXAmbientes.Where(exa => exa.eventoID == Model.eventoID).ToList();
}

<label style="font-weight:bold"> Detalle del evento</label>

    <div class="editor-label"> @Html.LabelFor(model => evento.nombre) </div>
    <div class="editor-label"> @Html.DisplayFor(model => evento.nombre) </div>
    <br />
    <div class="editor-label"> Número de participantes </div>
    <div class="editor-label"> @Html.DisplayFor(model => evento.num_participantes) </div>
    <br />    
    

<div class="editor-label"> Ambientes </div>
<br />
<table cellpadding="3" cellspacing="3">
       <tr border="1" bgcolor="#777777" color="#ffffff">
           <td width="60%" align="center">
              Nombre
           </td>
           <td width="50%" align="center">
              Fecha de inicio
           </td>
           <td width="50%" align="center">
              Fecha de fin
          </td>
          <td width="20%" align="center">
              Precio
          </td>
      </tr>
      @{
          var OddColor2 = "#DDEEEE";
          var evenColor2 = "#EEFFFF";
          var Odd2 = OddColor2;
       }
       @foreach (EventoXAmbiente exa in lista)
       {
           <tr border="1" bgcolor="@Odd2">
               <td align="center">@context.ambientes.Find(exa.ambienteID).descripcion
               </td>
               <td align="center">@exa.fecha_hora_inicio
               </td>
               <td align="center">@exa.fecha_hora_fin
               </td>
               <td align="center">@context.ambientes.Find(exa.ambienteID).precio
               </td>
           </tr>
           if (Odd2 == OddColor2)
           {
               Odd2 = evenColor2;
           }
           else
           {
               Odd2 = OddColor2;
           }

       }
</table>

<br />
<br />
@{
    List<Servicio> servicios = context.servicios.Where(s => s.eventoID == Model.eventoID).ToList();
}
<div class="editor-label"> Servicios </div>
<br />
<table cellpadding="3" cellspacing="3">
       <tr border="1" bgcolor="#777777" color="#ffffff">
           <td width="60%" align="center">
              Descripcion
           </td>
           <td width="50%" align="center">
              Tipo de servicio
           </td>
           <td width="50%" align="center">
              Precio final
          </td>
      </tr>
      @{
          var OddColor3 = "#DDEEEE";
          var evenColor3 = "#EEFFFF";
          var Odd3 = OddColor3;
       }
       @foreach (Servicio s in servicios)
       {
           <tr border="1" bgcolor="@Odd3">
               <td align="center">@s.descripcion
               </td>
               <td align="center">@context.tipo_servicios.Find(s.tipo_servicioID).descripcion
               </td>
               <td align="center">@s.precio_final
               </td>
           </tr>
           if (Odd3 == OddColor3)
           {
               Odd3 = evenColor3;
           }
           else
           {
               Odd3 = OddColor3;
           }

       }
</table>



<br />
<br />
<div class="editor-label"> Detalle del Recibo </div>
<br />
<table cellpadding="3" cellspacing="3">
       <tr border="1" bgcolor="#777777" color="#ffffff">
           <td width="90%" align="center">
              Detalle
           </td>
           <td width="20%" align="center">
              Puntos
           </td>
           <td width="20%" align="center">
              Precio final
          </td>
      </tr>
      @{
          var OddColor = "#DDEEEE";
          var evenColor = "#EEFFFF";
          var Odd = OddColor;
       }
       @foreach (ReciboLinea l in lineas)
       {
           <tr border="1" bgcolor="@Odd">
               <td align="center">@l.detalle
               </td>
               <td align="center">@l.puntos
               </td>
               <td align="center">@l.precio_final
               </td>
               
           </tr>
           if (Odd == OddColor)
           {
               Odd = evenColor;
           }
           else
           {
               Odd = OddColor;
           }

       }
</table>


<div class="editor-label"> 
<label> Total: </label>
@Html.DisplayFor(model => model.precio_total)
</div>
