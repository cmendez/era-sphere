@model List<Era_sphere.Areas.AreaContable.Models.Recibo.ReciboLinea>
@{
    ViewBag.Title = "Recibolinea";
    int idEvento = ViewBag.idEvento;
    ViewBag.idEvento = idEvento;
    Era_sphere.Areas.AreaEventos.Models.Evento.Evento evento = (new Era_sphere.Generics.EraSphereContext()).eventos.Find(idEvento);
    int idHotel = evento.hotel;
    //int clienteID = evento
}
@using Telerik.Web.Mvc.UI
<script type="text/javascript">
function ConfirmarPago() {
        
         $.ajax(
                {
                    url: '@Url.Action("PagarLineasEvento", "../AreaContable/Pagos")',
                    traditional: true,
                    data: {  clienteID : 1,
                            eventoID: @idEvento },
                    type: "POST",
                    success: function (data) {
                        //$("#Cortecuenta").data("tWindow").close();
                        $("#recibo_evento_div").load('@Url.Action("ReciboEvento", "../AreaContable/Recibo")', {reciboId: data.recibo_id, hotelID: @idHotel});
                        $("#ReciboEvento").data("tWindow").center().open();
                    },
                    async: false
                }
            );
        
    }
</script>
@(Html.Telerik().Window()
    .Name("ReciboEvento").Title("Recibo")
    .Content(@<text><div id="recibo_evento_div">
    </div></text>).Visible(false).Width(600).Height(400).Scrollable(true).Modal(true)
    )

    <div type="button"  onclick="ConfirmarPago()">GGGGG</div>

<div class="titlebar">
        <h5>
            Recibos de linea
        </h5>
</div>
<div class="block_cont">
        @(Html.Telerik().Grid(Model)
        .Name("ReciboLineaEvento")
        .Filterable()
        .Localizable("es-ES")
        .ToolBar(commands => commands.Insert())
        .Editable(editing => editing
                            .Mode(GridEditMode.InLine))
                            //.TemplateName("ReciboLineaTemplate"))
        .DataKeys(key => key.Add(c => c.ID))
        .ClientEvents(events => events.OnComplete("montos"))
        .Columns(columns =>
        {

            columns.Bound(p => p.fecha).ReadOnly();
            columns.Bound(p => p.precio_final);
            columns.Command(commands =>
            {
                commands.Edit().ButtonType(GridButtonType.Image);
                commands.Delete().ButtonType(GridButtonType.Image);
                });
        })
        .Pageable()
        .Sortable()
                //.ClientEvents(events=>events.OnComplete("funcioncita"))
        .DataBinding(dataBinding => dataBinding
            .Ajax()
            .Select("VerReciboLinea", "Evento", new { idEvento = idEvento })
            .Insert("InsertReciboLinea", "Evento", new { idEvento = idEvento })
            .Delete("DeleteReciboLinea", "Evento", new { idEvento = idEvento })
            .Update("UpdateReciboLinea", "Evento", new { idEvento = idEvento })
            
        )

</div>

