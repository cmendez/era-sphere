@using Era_sphere.Areas.AreaReservas
@using Era_sphere.Generics;
@using Telerik.Web.Mvc.UI
@model IEnumerable<ReservaView>
@{
    ViewBag.Title = "IndexHotel";
    var hotelID = (int)ViewData["hotelID"];
    Layout = "~/Views/Shared/_Layout.cshtml";
   // var paises = (new EraSphereContext()).paises.ToList();
   // var ciudades = (new EraSphereContext()).ciudades.ToList();
   var estados = (new EraSphereContext()).estados_reserva.ToList();
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    var antes = []; var first = true;
    var id = -1;
    function generarCruces(e) {
        var grid = $("#ReservaGrid").data("tGrid");
        if (!('data' in grid)) return;
        var despues = grid.data;
        console.log(despues);
        if (first || despues.length == 0) {
            antes = despues;
            first = false;
            return;
        }
        id = -1;
        if (despues.length > antes.length && despues.length >= 1) id = despues[despues.length - 1].ID;
        antes = despues;
        if (id == -1) return;
        console.log(id);
        $.ajax({
            url: '@Url.Action("RefrescaHabitaciones", "Reserva")',
            traditional: true,
                       data: { hab_ids: hab_ids, reserva_id : id },
                       type: "POST",
                       success: function (data) { },
                       async: true
         });
         id = -1;
         grid.ajaxRequest();
    }
    function edita(e) {
        if (e.mode == "edit") {

            console.log(e);
            hab_ids = [];
            for (i in e.dataItem.habitaciones) hab_ids.push(e.dataItem.habitaciones[i].habitacionID);
            console.log(hab_ids);
            $.ajax({
                       url: '@Url.Action("SubConsulta", "Consulta")',
                       traditional: true,
                       data: { hab_ids: hab_ids },
                       type: "POST",
                       success: function (data) { document.getElementById("todo").innerHTML = data; },
                       async: false
                   });
                   $("#todo").find("button.btn_quitar").hide();
        }
     }
     function anulaReserva(id) {
         $.ajax({
             url: '@Url.Action("AnulaReserva", "Reserva")',
             data: { reserva_id: id },
             type: "POST",
             success: function (data) { $("#ReservaGrid").data("tGrid").asyncRequest(); },
             async: true
         });

     }
</script>


<div class="block big" style="position: relative">
    <!-- Block Begin -->
    <div class="titlebar">
        <h3>
            Gestionar Reservas
        </h3>
    </div>
   
    <div class="block_cont">
   

      @(Html.Telerik().Grid(Model)
        .Name("ReservaGrid")
        .Localizable("es-ES")
        .Filterable()
        .ToolBar(commands => commands.Insert())
        .Editable(editing => editing
                            .Mode(GridEditMode.PopUp)
                            .TemplateName("ReservaViewTemplate"))

        .DataKeys(key => key.Add(c => c.ID))
        .Columns(columns =>
        {
            columns.Bound(p => p.responsable_pago);
            columns.Bound(p => p.documento_identidad).Title("Documento");
            columns.Bound(p => p.ID);
            columns.ForeignKey(p => p.estadoID, new SelectList(estados, "ID", "descripcion"));
            columns.Template(
                @<text>
                    <button class="btn_anular" onclick="anulaReserva(@item.ID);">Anual</button>
                </text>
            );
            columns.Command(commands =>
            {
                commands.Edit().ButtonType(GridButtonType.Image);
                commands.Delete().ButtonType(GridButtonType.Image);

            });

        }).Pageable().Sortable()
                              .ClientEvents(events =>
                              {
                                  events.OnDataBound("generarCruces");
                                  events.OnEdit("edita");
                              })
                              .DataBinding(dataBinding => dataBinding
                                  .Ajax()
                                  .Select("Select", "Reserva", new { id = @hotelID })
                                  .Insert("Insert", "Reserva", new { id = @hotelID })
                                  .Delete("Delete", "Reserva", new { id_hotel = @hotelID })
                                  .Update("Update", "Reserva", new { id_hotel = @hotelID })

                              )
                                 )



    </div>
    <!-- Table Wrapper End -->
</div>

<script type="text/javascript">
    function onComplete(e) {
        if (e.name == "mostrar_juridico") {
            $("#detalle-cliente-juridico").load('@Url.Action("ClienteJuridicoShow", "Cliente")' + '/' + e.response.id);
            var detailModal = $("#DetalleJuridico").data("tWindow");
            detailModal.center().open();
        } else if (e.name == "mostrar_natural") {
            $("#detalle-cliente-natural").load('@Url.Action("ClienteNaturalShow", "Cliente")' + '/' + e.response.id);
            var detailModal = $("#DetalleNatural").data("tWindow");
            detailModal.center().open();
        }
    }
</script> 