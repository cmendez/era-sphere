@model Era_sphere.Areas.AreaClientes.Models.ClienteJuridicoView
@using Era_sphere.Generics
@using Era_sphere.Areas.AreaClientes.Models
@using Telerik.Web.Mvc.UI
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@{
    EraSphereContext context = new EraSphereContext();
    string pais_nombre = context.paises.Find(Model.paisID).nombre;
    string ciudad_nombre = context.ciudades.Find(Model.ciudadID).nombre;
    string estado_nombre = context.estados_cliente.Find(Model.id_estado).descripcion;
}

<div id="detalle-cliente-juridico">

    <fieldset>
        <legend>Cliente Juridico</legend>
        <div class="editor-label"> @Html.LabelFor(model => model.razon_social) </div>
        <div class="editor-field"> @Html.TextBoxFor(model => model.razon_social, new {@readonly = "readonly"}) </div>
        
        <div class="editor-label"> @Html.LabelFor(model => model.ruc) </div>
        <div class="editor-field"> @Html.TextBoxFor(model => model.ruc) </div>

        <div class="editor-label"> @Html.LabelFor(model => model.paisID) </div>
        <div class="editor-field"> <input class="text-box single-line" type="text" value="@pais_nombre" readonly="readonly" /> </div>
        
        <div class="editor-label"> @Html.LabelFor(model => model.ciudadID) </div>
        <div class="editor-field"> <input class="text-box single-line" type="text" value="@ciudad_nombre" readonly="readonly" /> </div>
        
        <div class="editor-label"> @Html.LabelFor(model => model.telefono) </div>
        <div class="editor-field"> @Html.TextBoxFor(model => model.telefono, new {@readonly = "readonly"}) </div>

        <div class="editor-label"> @Html.LabelFor(model => model.celular) </div>
        <div class="editor-field"> @Html.TextBoxFor(model => model.celular, new {@readonly = "readonly"}) </div>
        
        <div class="editor-label"> @Html.LabelFor(model => model.direccion) </div>
        <div class="editor-field"> @Html.TextBoxFor(model => model.direccion, new {@readonly = "readonly"}) </div>

        <div class="editor-label"> @Html.LabelFor(model => model.correo_electronico) </div>
        <div class="editor-field"> @Html.TextBoxFor(model => model.correo_electronico, new {@readonly = "readonly"}) </div>
        
        <div class="editor-label"> @Html.LabelFor(model => model.id_estado) </div>
        <div class="editor-field"> <input class="text-box single-line" type="text" value="@estado_nombre" readonly="readonly" /> </div>
        
        <div class="editor-label"> @Html.LabelFor(model => model.numero_reservas) </div>
        <div class="editor-field"> @Html.TextBoxFor(model => model.numero_reservas, new { @readonly = "readonly" }) </div>

        <div class="editor-label"> @Html.LabelFor(model => model.usuario) </div>
        <div class="editor-field"> @Html.TextBoxFor(model => model.usuario, new {@readonly = "readonly"}) </div>

        <div class="editor-label"> @Html.LabelFor(model => model.tarjeta_cliente)</div>
        <div class="editor-field"> @Html.TextBoxFor(model => model.tarjeta_cliente, new {@readonly = "readonly"}) </div>

        </fieldset>
        
        <button id="mostrar-detalle" class="t-button t-state-default" onclick="$('#MostrarDetalleJuridicoPopup').data('tWindow').center().open();">
            Mostrar consumo
        </button>
        
        @{Html.Telerik().Window().Name("MostrarDetalleJuridicoPopup")
        .Title("Detalle de consumo de Cliente").LoadContentFrom("DetalleCliente", "Cliente", new {id = Model.ID})
            .Modal(true)
            .Visible(false)
            .Width(300).Resizable().Draggable(true).Width(600).Height(300).Render();}
</div>