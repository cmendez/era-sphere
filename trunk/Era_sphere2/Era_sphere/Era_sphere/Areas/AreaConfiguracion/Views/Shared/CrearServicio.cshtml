@using Era_sphere.Areas.AreaConfiguracion.Models.Servicios
@using Era_sphere.Generics
@using Telerik.Web.Mvc.UI
@model ServicioView
@{
    EraSphereContext context = new EraSphereContext();
    var tipos = context.tipo_servicios.ToList();
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    
    function nuevoServicio() {
        servicio = {
            detalle : $("#detalle").val(),
            tipo_servicioID : parseInt($("#tipo_servicioID").data("tComboBox").value()),
            fecha_y_hora : $("#fecha_y_hora").data("tDateTimePicker").value(),
            repeticiones : parseInt($("#repeticiones").data("tTextBox").value()),
            campo1 : $("#campo1").val(),
            campo2 : $("#campo2").val(),
            campo3 : $("#campo3").val(),
        };
        if(servicio.tipo_servicioID == ""){
         servicio = null;
         alert("Debe especificar un tipo de servicio");
        }else $("#ServicioForm").data("tWindow").close();
    }
    var productos = [];
    function resetForm() {
        $("#repeticion").hide();
        $("#campo_1").hide();
        $("#campo_2").hide();
        $("#campo_3").hide();
        $("#productos_table").hide();
        productos = [];
        servicio = null;
    }
    function cambioTipo(e) {
        if (e.value.length == 0) return;
        $.ajax({
            url: '@Url.Action("ObtieneTipo", "TipoServicio")',
            traditional: true,
            data: { tipo_id: e.value },
            success: function (data) {
                resetForm();
                data = data.tipo;
                if (data.tiene_repeticiones) $("#repeticion").show();
                if (data.tiene_productos_asociados) $("#productos_table").show();
                if (data.campo1.length > 0) {
                    $("#campo_1").show();
                    document.getElementById("label_campo1").innerHTML = (data.campo1);
                }
                if (data.campo2.length > 0) {
                    $("#campo_2").show();
                    document.getElementById("label_campo2").innerHTML = (data.campo2);
                }
                if (data.campo3.length > 0) {
                    $("#campo_3").show();
                    document.getElementById("label_campo3").innerHTML = (data.campo3);
                }
            },
            type: "POST",
            async: true
        });   
    }
</script>

<div class="block big" style="position: relative">
    <label>Servicio:</label>

    <div class="editor-label"> @Html.LabelFor(model => model.tipo_servicioID) </div>
    <div class="editor-field">
        @Html.Telerik().ComboBoxFor(model => model.tipo_servicioID).BindTo(new SelectList(tipos, "ID", "nombre")).Placeholder("Seleccione...").SelectedIndex(0).ClientEvents(events => events.OnChange("cambioTipo"))
        @Html.ValidationMessageFor(model => model.tipo_servicioID)
    </div>

    <div class="editor-label"> @Html.LabelFor(model => model.detalle)</div>
    <div class="editor-field">
        @Html.EditorFor(model => model.detalle)
        @Html.ValidationMessageFor(model => model.detalle)
    </div>
    <div id="fecha-y-hora">
        <div class="editor-label">@Html.Label("Fecha y Hora")</div>
        @Html.Telerik().DateTimePickerFor(model => model.fecha_y_hora).Min(DateTime.Now).Value(DateTime.Now)
    </div>
    
    <div id="repeticion" style="display:none">
        <div class="editor-label">@Html.LabelFor(model => model.repeticiones)</div>
        @(Html.Telerik().IntegerTextBoxFor(model => model.repeticiones).MinValue(1).MaxValue(100).Value(1))
    </div>
    
    <div id="campo_1" style="display:none">
        <div class="editor-label"> <label id="label_campo1"></label>  </div>
        <div class="editor-field"> @Html.EditorFor(model => model.campo1) </div>
    </div>
    <div id="campo_2" style="display:none">
        <div class="editor-label"> <label id="label_campo2"></label> </div>
        <div class="editor-field"> @Html.EditorFor(model => model.campo2) </div>
    </div>
    <div id="campo_3" style="display:none">
        <div class="editor-label"> <label id="label_campo3"></label> </div>
        <div class="editor-field"> @Html.EditorFor(model => model.campo3) </div>
    </div>

    <div id="productos_table" style="display:none">
        
    </div>
    <button onclick="nuevoServicio();">Registrar</button>
    
</div>


