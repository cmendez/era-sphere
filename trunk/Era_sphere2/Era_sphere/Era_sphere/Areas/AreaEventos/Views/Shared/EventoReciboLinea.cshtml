@model List<Era_sphere.Areas.AreaContable.Models.Recibo.ReciboLinea>
@{
    ViewBag.Title = "Recibolinea";
    int idEvento = ViewBag.idEvento;
    ViewBag.idEvento = idEvento;
    Era_sphere.Areas.AreaEventos.Models.Evento.Evento evento = (new Era_sphere.Generics.EraSphereContext()).eventos.Find(idEvento);
    int idHotel = evento.hotel;
    int clienteID = evento.getPagadorID();
}
@using Telerik.Web.Mvc.UI
<script type="text/javascript">


        function ConfirmarPago() {
        console.log("configar pago");
        var gg;
        var montodeuda=$("#deuda").val();
        console.log("haber"+montodeuda)
        var juanchis_json = JSON.stringify({ clienteID:@clienteID,eventoID:@idEvento});
        $.ajax(
                    {
                        url: '@Url.Action("Deuda", "Evento")',
                        dataType : 'json',
                        contentType : 'application/json',
                        data: JSON.stringify({cad:montodeuda}),
                        type: "POST",
                        success: function (data) {
                            console.log("resul "+data.deuda)
                           if(data.deuda){
                                $.ajax(
                                    {
                                        url: '@Url.Action("PagarLineasEvento", "../AreaContable/Pagos")',
                                        dataType : 'json',
                                            contentType : 'application/json',
                                        data: juanchis_json,
                                        type: "POST",
                                        success: function (data) {
                                            $("#PagarEvento").data("tWindow").close();
                                            $("#recibo_evento_div").load('@Url.Action("ReciboEvento", "../AreaContable/Recibo")', {reciboId: data.recibo_id, hotelID: @idHotel});
                                            $("#ReciboEvento").data("tWindow").center().open();
                                        },
                                        async: false
                                    }
                                            );
                            }
                            else {alert("Debe cancelar toda la deuda");}
                        },
                        async: false
                    }
                );
        
        
        
    }
</script>
@(Html.Telerik().Window()
    .Name("ReciboEvento").Title("Recibo")
    .Content(@<text><div id="recibo_evento_div">
    </div></text>).Visible(false).Width(600).Height(400).Scrollable(true).Modal(true)
    )

    

<div class="titlebar">
        <h5>
            Recibos de linea
        </h5>
</div>
<div class="block_cont">
        @(Html.Telerik().Grid(Model)
        .Name("ReciboLineaEvento")
        .Filterable()
        .Localizable("es-ES")
        .ToolBar(commands => commands.Insert())
        .Editable(editing => editing
                            .Mode(GridEditMode.InLine))
                            //.TemplateName("ReciboLineaTemplate"))
        .DataKeys(key => key.Add(c => c.ID))
        .ClientEvents(events => events.OnComplete("montos"))
        .Columns(columns =>
        {

            columns.Bound(p => p.fecha).ReadOnly();
            columns.Bound(p => p.precio_final);
            columns.Command(commands =>
            {
                commands.Edit().ButtonType(GridButtonType.Image);
                commands.Delete().ButtonType(GridButtonType.Image);
                });
        })
        .Pageable()
        .Sortable()
                //.ClientEvents(events=>events.OnComplete("funcioncita"))
        .DataBinding(dataBinding => dataBinding
            .Ajax()
            .Select("VerReciboLinea", "Evento", new { idEvento = idEvento })
            .Insert("InsertReciboLinea", "Evento", new { idEvento = idEvento })
            .Delete("DeleteReciboLinea", "Evento", new { idEvento = idEvento })
            .Update("UpdateReciboLinea", "Evento", new { idEvento = idEvento })
            
        )
        )
</div>
    <div class="form">
        <input type="button" class="submit" onclick="ConfirmarPago()" value="Generar Boleta"/>
    </div>


