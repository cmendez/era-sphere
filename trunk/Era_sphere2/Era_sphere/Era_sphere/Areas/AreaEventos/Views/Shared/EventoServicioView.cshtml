@using Era_sphere.Areas.AreaReservas
@using Era_sphere.Generics
@using Telerik.Web.Mvc.UI
@model IEnumerable<Era_sphere.Areas.AreaConfiguracion.Models.Servicios.ServicioView>
@{
    ViewBag.Title = "Servicios De Reserva";
    EraSphereContext context = new EraSphereContext();
    var tipos_servicios = context.tipo_servicios.ToList();
    var idEvento = ViewBag.idevento;
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>


       @(Html.Telerik().Grid(Model)
        .Name("ServiciosReservaGrid")
        .Localizable("es-ES")
        .Filterable()
        .Editable(editing => editing
            .Mode(GridEditMode.PopUp)
            .TemplateName("ServicioViewTemplate"))
        .ToolBar(commands => commands.Insert())
        .DataKeys(key => key.Add(c => c.ID))
        .ClientEvents(events => events.OnDataBound("CalcularCostos"))
        .Columns(columns =>
        {
            columns.Bound(p => p.ID);
            columns.Bound(p => p.detalle);
            columns.ForeignKey(p => p.tipo_servicioID, new SelectList(tipos_servicios, "ID", "nombre"));
            columns.Bound(p => p.precio_final);
            columns.Command(commands =>
            {
                commands.Edit().ButtonType(GridButtonType.Image);
                commands.Delete().ButtonType(GridButtonType.Image);
                //commands.Custom("Mostrar")
                //    .Text("Mostrar")
                //    .DataRouteValues(route => route.Add(o => o.ID).RouteKey("servicio_id"))
                //    .Ajax(true)
                //    .Action("Nada", "Servicios");
            }).Width(160);
        })

        .Pageable()
        .Sortable()
               //.ClientEvents(events => events.OnComplete("completadoWi"))
        .DataBinding(dataBinding => dataBinding
            .Ajax().Select("VerServicio", "Evento", new { idEvento = idEvento })
            .Insert("InsertServicio", "Evento", new { idEvento = idEvento })
            .Delete("DeleteServicio", "Evento", new { idEvento = idEvento })
            .Update("UpdateServicio", "Evento", new { idEvento = idEvento })
        )
           )
