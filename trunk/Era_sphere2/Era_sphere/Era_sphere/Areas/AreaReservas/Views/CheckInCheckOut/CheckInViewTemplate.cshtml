@using Era_sphere.Areas.AreaReservas
@using Era_sphere.Generics;
@using Telerik.Web.Mvc.UI
@model ReservaView
@{
    ViewBag.Title = "check_in";
    var hotelID = Model.hotelID;
    string estado_nombre = (new EraSphereContext()).estados_reserva.Find(Model.estadoID).descripcion;
   // var paises = (new EraSphereContext()).paises.ToList();
   // var ciudades = (new EraSphereContext()).ciudades.ToList();
   var estados = (new EraSphereContext()).estados_reserva.ToList();
   bool sirve = (bool)(ViewData["sirve"]);
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">

    function validaFecha() {
        var dfecha_inicio = $("#fechaInicio").data("tDatePicker");
        var dfecha_fin = $("#fechaFin").data("tDatePicker");
        var inicio = new Date(dfecha_inicio.value());
        var fin = new Date(dfecha_fin.value());
        if (fin <= inicio) {
            alert("Error: la fecha fin debe ser mayor a la fecha de inicio");
            fin = new Date(inicio.getTime() + 86400000);
        }
        dfecha_fin.value(fin);
    }


    function CambiarEstado(reserva_id) {

        $.ajax({
            url: '@Url.Action("RealizarCheckIn", "CheckInCheckOut")',
            traditional: true,
            data: { reserva_id: reserva_id },
            type: "POST",
            success: function (data) {
                $("#CheckInCheckOutGrid").data("tGrid").ajaxRequest();
                 $("#CheckIn").data("tWindow").close();
            },
            async: true
        });
     
        
    }


</script>


<div class="block big" style="position: relative">
    <!-- Block Begin -->
    <div class="titlebar">
        <h3>
            Check-In
        </h3>
    </div>
   
    <div class="block_cont">
   
    
   <fieldset>
   

        <div class="editor-label"> @Html.Label("Fecha Actual:")</div>
        <div class="editor-field"> @Html.Telerik().DatePicker().Name("Fecha_actual").Value(DateTime.Now).Enable(false)</div>

        <div style="height: 10px;">
        </div>


        <div class="editor-label"> @Html.Label("Responsable de pago") </div>
        <div class="editor-field"> @Html.TextBoxFor(model => model.responsable_pago, new {@readonly = "readonly", style="width:250px;"}) </div>

        <div class="editor-label"> @Html.LabelFor(model => model.estadoID) </div>
         <div class="editor-field"> <input class="text-box single-line" type="text" value="@estado_nombre" readonly="readonly" /> </div>
      

            <div class="editor-label"> @Html.LabelFor(model => model.FechaInicio) </div>
            <div class="editor-field">
            @Html.Telerik().DatePickerFor(model => model.FechaInicio).Name("FechaInicio").Enable(false)
             @Html.ValidationMessageFor(model => model.FechaInicio)
            </div>


            <div class="editor-label"> @Html.LabelFor(model => model.FechaFin) </div>
            <div class="editor-field">
                @Html.Telerik().DatePickerFor(model => model.FechaFin).Name("FechaFin").Enable(false)
                @Html.ValidationMessageFor(model => model.FechaFin)
            </div>


      
        <div class="editor-label"> @Html.LabelFor(model => model.costo_inicial) </div>
        <div class="editor-field"> @Html.TextBoxFor(model => model.costo_inicial, new { @readonly = "readonly" }) </div>

       
   </fieldset>

   @if (sirve)
   {
       <button onclick="CambiarEstado(@Model.ID)"> Aceptar </button>
   }

</div>

</div>