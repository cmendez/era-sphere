@using Era_sphere.Areas.AreaReservas
@using Era_sphere.Generics;
@using Telerik.Web.Mvc.UI
@model ReservaView
@{
    ViewBag.Title = "check_out";
    var hotelID = Model.hotelID;
  
   // var paises = (new EraSphereContext()).paises.ToList();
   // var ciudades = (new EraSphereContext()).ciudades.ToList();
   var estados = (new EraSphereContext()).estados_reserva.ToList();
   var tipos_servicios = (new EraSphereContext()).tipo_servicios.ToList();
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">

    function validaFecha() {
        var dfecha_inicio = $("#fechaInicio").data("tDatePicker");
        var dfecha_fin = $("#fechaFin").data("tDatePicker");
        var inicio = new Date(dfecha_inicio.value());
        var fin = new Date(dfecha_fin.value());
        if (fin <= inicio) {
            alert("Error: la fecha fin debe ser mayor a la fecha de inicio");
            fin = new Date(inicio.getTime() + 86400000);
        }
        dfecha_fin.value(fin);
    }


    function CambiarEstadoCheckOut(reserva_id) {

        $.ajax({
            url: '@Url.Action("RealizarCheckOut", "CheckInCheckOut")',
            traditional: true,
            data: { reserva_id: reserva_id },
            type: "POST",
            success: function (data) {
                $("#CheckInCheckOutGrid").data("tGrid").ajaxRequest();
                 $("#CheckOut").data("tWindow").close();
            },
            async: true
        });


    }


</script>


<div class="block big" style="position: relative">
    <!-- Block Begin -->
    <div class="titlebar">
        <h3>
            Check-Out
        </h3>
    </div>
   
    <div class="block_cont">
   
    
   <fieldset>
   
        <div class="editor-label"> @Html.Label("Fecha Actual:")</div>
        <div class="editor-field"> @Html.Telerik().DatePicker().Name("Fecha_actual").Value(DateTime.Now)</div>

        <div style="height: 10px;">
        </div>

        <div class="editor-label"> @Html.Label("Responsable de Pago") </div>
        <div class="editor-field"> @Html.TextBoxFor(model => model.responsable_pago, new {@readonly = "readonly", style="width:250px;"}) </div>

     

            <div class="editor-label"> @Html.LabelFor(model => model.FechaInicio) </div>
            <div class="editor-field">
            @Html.Telerik().DatePickerFor(model => model.FechaInicio).Name("FechaInicio").Min(DateTime.Now).Value(DateTime.Now).ClientEvents(
             events => events.OnChange("validaFecha"))
             @Html.ValidationMessageFor(model => model.FechaInicio)
            </div>


            <div class="editor-label"> @Html.LabelFor(model => model.FechaFin) </div>
            <div class="editor-field">
                @Html.Telerik().DatePickerFor(model => model.FechaFin).Name("FechaFin").Min(DateTime.Now.AddDays(1)).ClientEvents(
                      events => events.OnChange("validaFecha"))
                @Html.ValidationMessageFor(model => model.FechaFin)
            </div>


            <div style="height: 10px;">
            </div>

             <div class="editor-label"> @Html.Label("Tabla de consumo de reserva:")</div>

            <div style="height: 10px;">
            </div>



         <div class="block_cont">
       @(Html.Telerik().Grid(Model.servicios)
        .Name("ServiciosReservaGrid")
        .Localizable("es-ES")
        .Filterable()

        .DataKeys(key => key.Add(c => c.ID))
        .Columns(columns =>
        {
            columns.Bound(p => p.ID);
            columns.Bound(p => p.detalle);
            columns.ForeignKey(p => p.tipo_servicioID, new SelectList(tipos_servicios, "ID", "nombre"));
            
        })

        .Pageable()
        .Sortable()
        .DataBinding(dataBinding => dataBinding
            .Ajax().Select("_CustomCommand", "Cliente")
            .Select("SelectReserva", "../AreaConfiguracion/Servicios", new { id_reserva = Model.ID })
                    .Delete("DeleteReserva", "../AreaConfiguracion/Servicios", new { id_reserva = Model.ID })
        )
           )
    </div>


        <div style="height: 10px;">
            </div>

      
        <div class="editor-label"> @Html.LabelFor(model => model.costo_final) </div>
        <div class="editor-field"> @Html.TextBoxFor(model => model.costo_final, new { @readonly = "readonly" }) </div>

       
   </fieldset>

   
       <button onclick="CambiarEstadoCheckOut(@Model.ID)"> Aceptar </button>
    

</div>

</div>