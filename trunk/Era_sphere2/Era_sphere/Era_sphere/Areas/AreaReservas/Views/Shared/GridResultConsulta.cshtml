@model ConsultaView
@using Telerik.Web.Mvc.UI
@using Era_sphere.Areas.AreaReservas.Models
@using Era_sphere.Areas.AreaHoteles.Models
@using Era_sphere.Generics

@{
    var tipos_habitaciones = (new EraSphereContext()).tipos_habitacion.ToList();
    tipos_habitaciones.Insert(0, new TipoHabitacion { ID = 0, descripcion = "Todos" });
    var pisos = (new EraSphereContext()).pisos.Where(p=>p.hotelID==Model.hotelID).ToList();
    pisos.Insert(0, new Piso { ID = 0, descripcion = "Todos" });
    bool partial = (bool)(ViewData["partial"]);
}
 <div class="editor-label">
                    @Html.LabelFor(model => model.habitaciones_libres_total)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.habitaciones_libres_total, new { @readonly = "readonly" })
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.habitaciones_libres_piso)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.habitaciones_libres_piso, new { @readonly = "readonly" })
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.habitaciones_libres_tipo)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.habitaciones_libres_tipo, new { @readonly = "readonly" })
                </div>
@(Html.Telerik().Grid(Model.resultados)
        .Name("ConsultaGrid")
        .Localizable("es-ES")
        .Editable(editing => editing.Mode(GridEditMode.InForm))
        .DataKeys(key =>key.Add(c=>c.habitacionID))
        .Columns(columns =>
        {
            columns.Bound(p => p.habitacionID).Hidden();
            columns.Bound(p => p.numero_habitacion);
            columns.ForeignKey(p => p.tipo_habitacionID, new SelectList(tipos_habitaciones, "ID", "descripcion"));
            columns.ForeignKey(p => p.tipo_habitacionID, new SelectList(tipos_habitaciones, "ID", "numero_camas")).Title(@"Número de camas");
            columns.ForeignKey(p => p.tipo_habitacionID, new SelectList(tipos_habitaciones, "ID", "costo_base")).Title("Precio");
            columns.ForeignKey(p => p.tipo_habitacionID, new SelectList(tipos_habitaciones, "ID", "cap_max_personas")).Title("Capacidad");
            if (partial)
            {
                columns.Template(
                     @<text>
                    <button onclick="agregaHabitacion(@item.habitacionID);">Agregar</button>
                    
                </text>
                ).Width(50).HtmlAttributes(new { style = "text-align:center" });
            } 
        })

        .Pageable()
        .Sortable()
        )
        